# This is a basic workflow to help you get started with Actions
env:
 artifactFolder: $(Pipeline.Workspace)\s\AltoroJ 3.1.1\build\libs
 artifactName: altoromutual.war
 aseAppName: AltoroJ
 aseHostname: ase.lab.local
 aseToken: C:\ProgramData\HCL\AppScanSource\config\ounceautod.token
 sevSecGw: highIssues
 maxIssuesAllowed: 10

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "AltoroJ-3.2" branch
  push:
    branches: [ "AltoroJ-3.2" ]
  pull_request:
    branches: [ "AltoroJ-3.2" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          "login_file $(aseHostname) $(aseToken) -acceptssl" | out-file script.scan
          "RUNAS AUTO" | out-file -append script.scan
          "oa `"$(artifactFolder)\$(artifactName)`" -appserver_type Tomcat7 -no_ear_project" | out-file -append script.scan
          "ra `"$(artifactFolder)\$(artifactName).ozasmt`" -scanconfig `"Normal scan`" -name `"$(artifactName)-$(Build.BuildNumber)`"" | out-file -append script.scan
          "report Findings zip `"$(artifactName).zip`" `"$(artifactFolder)\$(artifactName).ozasmt`" -includeSrcBefore:5 -includeSrcAfter:5 -includeTrace:definitive -includeTrace:suspect -includeHowToFix" | out-file -append script.scan
          "pa `"$(artifactFolder)\$(artifactName).ozasmt`"" | out-file -append script.scan
          "publishassessase `"$(artifactFolder)\$(artifactName).ozasmt`" -aseapplication `"$(aseAppName)`" -name `"$(artifactName)-$(Build.BuildNumber)`"" | out-file -append script.scan
          "exit" | out-file -append script.scan
          
#      - name: Import Results
#        uses: github/codeql-action/upload-sarif@v1
#        with:
#          sarif_file: ./results/java.sarif
